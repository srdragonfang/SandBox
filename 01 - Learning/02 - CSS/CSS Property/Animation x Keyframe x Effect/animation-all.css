.class-animation {
    animation: example 5s linear 2s infinite alternate; /* Animation Shorthand Property */
    animation-name: animation-title;
    animation-duration: 4s;
    animation-delay: 2s; /* có thê có số âm */
    animation-iteration-count: 3; /* value number : infinite */
    animation-direction: reverse; /* normal - reverse - alternate - alternate-reverse */
    animation-timing-function: ease; /* ease - linear - ease-in - ease-out - ease-in-out - cubic-bezier(n,n,n,n) */
    animation-fill-mode: none;
  }

.animationCSS {
     animation: example 5s linear 2s infinite alternate;
     /* Animation Shorthand Property */
     animation-name: animation-title;
     animation-duration: 4s;
     animation-delay: 2s; /* có thê có số âm */
     animation-iteration-count: 3;
     /* Set How Many Times an Animation Should Run -> value number || infinite */
     animation-direction: reverse;
     /* Run Animation in Reverse Direction or Alternate Cycles */
     /* normal - The animation is played as normal (forwards). This is default */
     /* reverse - The animation is played in reverse direction (backwards) */
     /* alternate - The animation is played forwards first, then backwards */
     /* alternate-reverse - The animation is played backwards first, then forwards */
     animation-timing-function: ease;
     /* Specify the Speed Curve of the Animation */
     /* ease - Specifies an animation with a slow start, then fast, then end slowly (this is default) */
     /* linear - Specifies an animation with the same speed from start to end */
     /* ease-in - Specifies an animation with a slow start */
     /* ease-out - Specifies an animation with a slow end */
     /* ease-in-out - Specifies an animation with a slow start and end */
     /* cubic-bezier(n,n,n,n) - Lets you define your own values in a cubic-bezier function */
     animation-fill-mode: none;
     /* Specify the fill-mode For an Animation */
     /* none - Default value. Animation will not apply any styles to the element before or after it is executing */
     /* forwards - The element will retain the style values that is set by the last keyframe (depends on animation-direction and animation-iteration-count) */
     /* backwards - The element will get the style values that is set by the first keyframe (depends on animation-direction), and retain this during the animation-delay period */
     /* both - The animation will follow the rules for both forwards and backwards, extending the animation properties in both directions \*/
}
@keyframes animation-title {
     from {

 }
 to {

 }
}


